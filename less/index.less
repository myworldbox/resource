/*
Default styling
*/

@import url("https://fonts.googleapis.com/css2?family=Caveat&family=Cinzel&family=Gochi+Hand&family=Indie+Flower&family=Liu+Jian+Mao+Cao&family=Long+Cang&family=Ma+Shan+Zheng&family=Playfair+Display&family=ZCOOL+XiaoWei&family=Zhi+Mang+Xing&display=swap");

:root {
  --resURL: url("https://myworldbox.github.io/resource/image/background/ascii.gif");
}

* {
  margin: 0 auto;
  padding: 0;
  border: 0;
  overflow: hidden;
  word-wrap: break-word;
  font-family: "Times New Roman", Times, serif;
}

body {
  background: var(--resURL);
  color: aquamarine;
}

html {
  overflow: auto;
  text-align: center;
}

/*
Recursive styling (variables)
*/

@element: border-radius, font-size, padding, margin, gap, max-width;

@color: #ffffff, #dd8282, #da9168, lawngreen, rgb(209, 201, 223), gray,
  rgb(223, 191, 202), palegoldenrod, rgb(209, 99, 26), rgb(51, 255, 0),
  rgb(96, 211, 42), plum, blue, black, rgb(17, 25, 95), rgb(24, 21, 32), rgb(15, 4, 30);

@font-family: "Playfair Display", serif, "Caveat", cursive, "Cinzel", serif,
  "Gochi Hand", cursive, "Merienda", cursive, "Liu Jian Mao Cao", cursive,
  "Long Cang", cursive, "Ma Shan Zheng", cursive, "ZCOOL XiaoWei", serif;

/*
Recursive styling (functions)
*/

.index-style( @current: 1; @max: 1000; @offset: 1; @unit: px; @cell)
  when
  (@current <= @max) {
  .@{cell}-@{current} {
    @{cell}: ~"@{current}@{unit}";
  }
  .index-style((@current + @offset), @max, @offset, @unit, @cell);
}

.element-to-style(@i: length(@element)) when (@i > 0) {
  .element-to-style(@i - 1);

  .index-style(@unit: "px", @cell: extract(@element, @i));
}

.switch(@text, @i, @element, @operator)
  when
  (@operator = 0)and
  (@i < length(@element)) {
  .@{text}-@{i} {
    @{text}: extract(@element, @i + 1);
  }
}

.switch(@text, @i, @element, @operator)
  when
  (@operator = 1)
  and
  (@i < length(@element)) {
  .@{text}-@{i} {
    @{text}: 1px solid extract(@element, @i + 1);
  }
}

.switch(@text, @i, @element, @operator)
  when
  (@operator = 2)
  and
  (@i < length(@element)/2) {
  .@{text}-@{i} {
    @{text}: extract(@element, @i * 2 + 1), extract(@element, (@i * 2) + 2);
  }
}

/*
Recursive styling (execution)
*/

.dictionary-to-style(@text, @i:0, @element, @max:length(@element), @operator)
  when
  (@i <= @max) {
  .dictionary-to-style(@text, @i: (@i + 1), @element, @max, @operator);
  .switch(@text, @i, @element, @operator);
}

.element-to-style();

.dictionary-to-style(@text: color, @element: @color, @operator:0);
.dictionary-to-style(@text: background, @element: @color, @operator:0);

.dictionary-to-style(@text: border, @element: @color, @operator:1);
.dictionary-to-style(@text: font-size, @element: @color, @operator:1);
.dictionary-to-style(@text: border-bottom, @element: @color, @operator:1);

.dictionary-to-style(@text: font-family, @element: @font-family, @operator:2);

/*
Hard-coded styling
*/

.text-align-1 {
  text-align: left !important;
}

.text-align-2 {
  text-align: center !important;
}

.text-align-3 {
  text-align: right !important;
}

.opacity-0 {
  opacity: 1;
}

.opacity-1 {
  opacity: 0.5;
}
